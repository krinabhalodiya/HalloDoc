@{
    ViewData["Title"] = "Home Page";
}
@model Assignment.Entity.Model.PaginatedViewModel;
<partial name="../Home/_partials/AddEmployee.cshtml"/>
<partial name="../Home/_partials/EditEmployee.cshtml"/>
<div class="container-fluid header">
    <div class="d-flex justify-content-between p-2 ">
        <h5 class="align-self-center">Employee Management System</h5>
        <a data-bs-toggle="modal" data-bs-target="#addEmployee" class="rounded btn btn-light">ADD EMPLOYEE</a>
    </div>
</div>
<div class="maindiv container-fluid">
    <form method="post" asp-controller="Home" asp-action="Index" id="searchform" class="w-100" enctype="multipart/form-data">
        <div class="row w-100 input-group">
            <div class="col-12 pb-3">
                <input type="text" asp-for="SearchInput" class="form-control shadow-none"  id="search" placeholder="Search" />
            </div>
        </div>
    </form>
    </div>
    <div>
    <div class="table-responsive maindiv d-flex justify-content-center container-fluid">
        <table class="table table-responsive mt-3 mb-0">
            <thead class="bg-light">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Age</th>
                    <th scope="col">Gender</th>
                    <th scope="col">Department</th>
                    <th scope="col">Education</th>
                    <th scope="col">Company</th>
                    <th scope="col">Experience</th>
                    <th scope="col">Package</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody class="table-group-divider" id="BlockHistory">
                @foreach (var (item, index) in Model.Employees.Select((item, index) => (item, index)))
                {
                    <tr>
                        <td scope="col" class="table-text">@item.Id</td>
                        <td scope="col" class="table-text">@item.FirstName</td>
                        <td scope="col" class="table-text">@item.LastName</td>
                        <td scope="col" class="table-text">@item.Email</td>
                        <td scope="col" class="table-text">@item.Age</td>
                        <td scope="col" class="table-text">@item.Gender</td>
                        <td scope="col" class="table-text">@item.DeptName</td>
                        <td scope="col" class="table-text">@item.Education</td>
                        <td scope="col" class="table-text">@item.Company</td>
                        <td scope="col" class="table-text">@item.Experience</td>
                        <td scope="col" class="table-text">@item.Package</td>
                        <td class="d-flex">
                            <button data-bs-toggle="modal" data-bs-target="#editEmployee" onclick="setvalue(@index)" class="btn btn-dark btn-sm mx-1 Edit">
                                Edit
                            </button>
                            <form class="DeleteForm" asp-controller="Home" asp-action="DeleteEmployee" asp-route-employeeid="@item.Id">
                                <button type="submit" class="btn btn-danger btn-sm document-button mx-1 delete">
                                    Delete
                                </button>
                            </form>
                            
                        </td>
                    </tr>
                }
            </tbody>
        </table>
       
    </div>
    @* pagination *@
    <div class="d-flex justify-content-end maindiv">
        <nav aria-label="Page navigation example">
            <ul class="pagination pagination-container">
                @{
                    int i;
                    <form id="paginationform1" asp-controller="Home" asp-action="Index" novalidate="novalidate" class="d-flex">
                        <input type="hidden" asp-for="SearchInput" />
                        <input type="hidden" asp-for="SearchInput" />
                        <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                        <div class="search m-1 d-flex justify-content-between">
                            <span class="pagesize">Page Size</span>
                            <select class="form-select pagesizeselect" asp-for="PageSize" data-allow-clear="true" tabindex="-1" id="pagesizedropdown" data-control="select2" data-placeholder="Select Level">
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                            </select>

                        </div>
                    </form>
                    <h6 class="align-self-center">@Model.curententries of @Model.totalentries</h6>
                    <form id="paginationform" asp-controller="Home" asp-action="Index" novalidate="novalidate" class="d-flex align-self-center">
                        <input type="hidden" asp-for="SearchInput" />
                        <input type="hidden" asp-for="SearchInput" />
                        <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                        <input type="hidden" asp-for="PageSize" />
                        @if (@Model.CurrentPage > 1)
                        {
                        <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button></li>
                        }
                        else
                        {
                        <li class="me-2 page-item"><a class="disabled btn">&lt;</a></li>
                        }
                        @for (i = 1; i <= @Model.TotalPages; i++)
                        {
                        <li class="page-item me-2"><button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button></li>
                        }
                        @if (@Model.TotalPages > @Model.CurrentPage)
                        {
                        <li class="page-item me-2"><button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button></li>
                        }
                        else
                        {
                        <li class="me-2 page-item"><a class="btn disabled">&gt;</a></li>
                        }
                    </form>
                }
            </ul>
        </nav>

    </div>
</div>

<script>
    var deleteButton = document.querySelectorAll('.delete');

    function setvalue(id) {
        console.log(id);
        var modeldata = @Html.Raw(Json.Serialize(Model.Employees))
            console.log(modeldata[id])
        document.getElementById('id').value = modeldata[id].id;
        document.getElementById('firstname').value = modeldata[id].firstName;
        document.getElementById('lastname').value = modeldata[id].lastName;
        document.getElementById('email').value = modeldata[id].email;
        document.getElementById('age').value = modeldata[id].age;
        document.getElementById('gender').value = modeldata[id].gender;
        document.getElementById('department').value = modeldata[id].deptName;
        document.getElementById('education').value = modeldata[id].education;
        document.getElementById('companyname').value = modeldata[id].company;
        document.getElementById('experiance').value = modeldata[id].experience;
        document.getElementById('package').value = modeldata[id].package;
    }
    $(function () {
        $('#search').on('keyup', function () {
            console.log("abc");
            $('#searchform').submit();
        });
    });
    $(function () {
        $('#pagesizedropdown').on('change', function () {
            console.log("abc");
            $('#paginationform1').submit();
        });
    });
    function setpagenumber(e) {
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#paginationform").submit();
    }
</script>