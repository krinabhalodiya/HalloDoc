@{
    Layout = "_Layout";
}
@using static HalloDoc.Entity.Models.Constant;
@model HalloDoc.Entity.Models.PaginatedViewModel;

<div class="container-fluid px-4 mt-2 pb-3">
    <div class="d-flex justify-content-between my-2">
        <div class="d-flex align-self-center">
            <h4><strong>Patient Records</strong></h4>
        </div>
        <a asp-controller="Records" asp-action="PatientHistory" class="btn border-info shadow-none">
            <strong class="text-info">
                <i class="fa fa-chevron-left" aria-hidden="true"></i> Back
            </strong>
        </a>
    </div>
    <partial name="../../AdminActions/_partial/EncounterPdf.cshtml" />
    <div class="bg-white rounded shadow my-3">
        <!--List of Outcomes-->
        <div class="table-responsive">
            <table id="PatientHistory" class="table table-responsive mt-3 p-3">
                <thead class="bg-light">
                    <tr>
                        <th scope="col">Client/Member</th>
                        <th scope="col">Created Date</th>
                        <th scope="col">Confirmation Number</th>
                        <th scope="col">Provider Name</th>
                        <th scope="col">Concluded Date</th>
                        <th scope="col">Status</th>
                        <th scope="col">Final Report</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider mx-5">
                    @foreach (var item in Model.adl)
                    {
                        <tr>
                            <td scope="row">@item.PatientName</td>
                            <td scope="row">@item.RequestedDate.ToString("MMM d, yyyy")</td>
                            <td scope="row">@item.ConfirmationNumber</td>
                            <td scope="row">@item.ProviderName</td>
                            <td scope="row">@item.ConcludedDate.ToString("MMM d, yyyy")</td>
                            <td scope="row">@Enum.GetName(typeof(Status), item.Status)</td>
                            <td>
                                @if (item.IsFinalize)
                                {
                                    <a data-bs-toggle="modal" data-bs-target="#EncounterPdf" class="btn border-info text-info btn-sm document-button" onclick="model_Case(@item.RequestID)"><i class="bi bi-journal-text me-1"></i>View</a>
                                }
                            </td>
                            <td>
                                <div class="dropdown">
                                    <button class="btn btn-sm border-info text-info shadow-none" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <small>Actions</small>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <a asp-action="ViewCase" asp-controller="AdminActions" asp-route-id="@item.RequestID" class="dropdown-item">
                                                View Case
                                            </a>
                                        </li>
                                        <li>
                                            <a asp-controller="" asp-action="" class="dropdown-item">
                                                Chat
                                            </a>
                                        </li>
                                        <li>
                                            <a asp-action="ViewUpload" asp-controller="AdminActions" asp-route-id="@item.RequestID" class="dropdown-item">
                                                Documents
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
        <!-- End List of Outcomes-->
        <!--Pagination-->
        <nav aria-label="Page navigation example" id="Pagination">
            <div class="d-flex justify-content-between mx-2 mt-3">
                <div>
                    @if (Model.TotalPages == 0)
                    {
                        Model.CurrentPage = 0;
                    }
                    Page @Model.CurrentPage / @Model.TotalPages
                </div>
                <div>
                    <ul class="pagination pagination-container">
                        @{
                            int i;
                            <form id="paginationform" asp-action="PatientRecords" asp-controller="Records" novalidate="novalidate" class="d-flex">
                                <input type="hidden" asp-for="PageSize" />
                                <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                                <input type="hidden" asp-for="UserId"/>

                                @if (@Model.CurrentPage > 1)
                                {
                                <li class="page-item me-2">
                                    <button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button>
                                </li>
                                }
                                else
                                {
                                <li class="me-2 page-item">
                                    <button class="disabled btn">&lt;</button>
                                </li>
                                }
                                @for (i = 1; i <= @Model.TotalPages; i++)
                                {
                                <li class="page-item me-2">
                                    <button class="@(i == @Model.CurrentPage ? "activepagebtn" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button>
                                </li>
                                }
                                @if (@Model.TotalPages > @Model.CurrentPage)
                                {
                                <li class="page-item me-2">
                                    <button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button>
                                </li>
                                }
                                else
                                {
                                <li class="page-item">
                                    <button class="btn disabled">&gt;</button>
                                </li>
                                }
                            </form>
                        }
                    </ul>
                </div>
            </div>
        </nav>
        <!--End Pagination-->
    </div>
</div>

<script>
    modeldata = @Html.Raw(Json.Serialize(Model))

        function setpagenumber(e) {
            console.log(e)
            if (e == 'previous') {
                var cp = @Model.CurrentPage-1;
                $('#currentpagevalue').val(cp);
            }
            else if (e == 'next') {
                var cp = @Model.CurrentPage + 1;
                $('#currentpagevalue').val(cp);
            }
            else {
                $('#currentpagevalue').val(e);
            }
            $("#documentform").submit();
        }
</script>